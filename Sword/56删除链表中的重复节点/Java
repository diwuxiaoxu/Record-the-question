题目描述
在一个排序的链表中，存在重复的结点，请删除该链表中重复的结点，重复的结点不保留，返回链表头指针。
 例如，链表1->2->3->3->4->4->5 处理后为 1->2->5

解析

    题目难点：在于如果表头节点就重复，应该怎么处理？？
    
    声明一个虚拟头结点，使其指向表头，然后从表头开始遍历链表
    
    删除节点：需要preNode和node，
    
    /*
 public class ListNode {
    int val;
    ListNode next = null;

    ListNode(int val) {
        this.val = val;
    }
}
*/
public class Solution {
    public ListNode deleteDuplication(ListNode pHead)
    {
        if (pHead == null || pHead.next == null) return pHead;
        //创建虚拟头结点
        ListNode dummy = new ListNode(-1);
        dummy.next = pHead;
        ListNode pre = dummy;
        //链表头也可能会重复
        ListNode node = pHead;
        while(node != null){
            if (node.next != null && node.val == node.next.val){
                   //寻找不重复的节点位置
                while(node.next != null && node.val == node.next.val){
                    node = node.next;
                }
                pre.next = node.next;
                node = node.next;
            }
            else{
                pre = pre.next;
                node = node.next;
            }
        }
        return dummy.next;
    }
}

题目描述
给定一棵二叉搜索树，请找出其中的第k小的结点。例如， （5，3，7，2，4，6，8）    中，按结点数值大小顺序第三小结点的值为4。

解析：

  直接根据二叉搜索树的特点，先中序遍历产生一个从小到大的排序结果，然后直接返回第k个节点
  
  /*
public class TreeNode {
    int val = 0;
    TreeNode left = null;
    TreeNode right = null;

    public TreeNode(int val) {
        this.val = val;

    }

}
*/
import java.util.*;
public class Solution {
    ArrayList<TreeNode> list = new ArrayList<>();
    TreeNode KthNode(TreeNode pRoot, int k)
    {
        if (pRoot == null || k <=0) return null;
        inOrder(pRoot);
        TreeNode res = null;
        if (k <= list.size()){
            res =  list.get(k-1);
        }
        return res;
    }
    public void inOrder(TreeNode root){
        if (root == null) return;
        inOrder(root.left);
        list.add(root);
        inOrder(root.right);
    }
}

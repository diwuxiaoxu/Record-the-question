输入一个整数数组，实现一个函数来调整该数组中数字的顺序，使得所有的奇数位于数组的前半部分，所有的偶数位于数组的后半部分，并保证奇数和奇数，偶数和偶数之间的相对位置不变。


解析：
  插入排序
  
public class Solution {
    public void reOrderArray(int [] array) {
        //保持相对位置不变，具有稳定性的内部排序，插入排序和归并排序，这里使用插入排序
        int k = 0;
        //用来记录插入的位置
        int len = array.length;
        for (int i=0; i<len; i++){
            if(array[i] %2 != 0){
                //如果当前元素为奇数，则插入到第k个位置
                int j = i;
                while(j >k){
                    int temp = array[j];
                    array[j] = array[j-1];
                    array[j-1] = temp;
                    j--;
                }
                //此时array[j]就插入到第k个位置，并且从k到j的位置元素依次后移
                k++;
            }
        }
    }
}

把一个数组最开始的若干个元素搬到数组的末尾，我们称之为数组的旋转。
输入一个非递减排序的数组的一个旋转，输出旋转数组的最小元素。
例如数组{3,4,5,1,2}为{1,2,3,4,5}的一个旋转，该数组的最小值为1。
NOTE：给出的所有元素都大于0，若数组大小为0，请返回0。

解析：

还是不是很明白：
    旋转后的两个子数组，都是一个简单的递增子数组
https://www.nowcoder.com/profile/460990110/codeBookDetail?submissionId=59727212

import java.util.ArrayList;
public class Solution {
    public int minNumberInRotateArray(int [] array) {
        //旋转后形成两个子数组，前面子数组的大小都大于后面子数组中的元素,
        int left = 0, right = array.length -1;
        while(left < right){
            int mid = left + (right - left)/2;
            if(array[mid] > array[right]){
                //[mid,right]则是先降低再增加,最小值则在[mid,right]之间
                left = mid +1;
            }
            else if(array[mid] == array[right]){
                
                right = right -1;
            }
            else{
                right = mid ;
            }
        }
        return array[left];
    }
}

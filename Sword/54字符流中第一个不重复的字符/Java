题目描述
请实现一个函数用来找出字符流中第一个只出现一次的字符。
例如，当从字符流中只读出前两个字符"go"时，第一个只出现一次的字符是"g"。当从该字符流中读出前六个字符“google"时，第一个只出现一次的字符是"l"。
输出描述:
如果当前字符流没有存在出现一次的字符，返回#字符。

解析：
    重复问题，使用set集合
  根据哈希桶的思想，我们将256个字符，分别建立一个对应的数组，将字符数作为数组的索引，
  
  public class Solution {
    //Insert one char from stringstream
    //可以根据哈希桶的思想，为每个字符建立一个桶，然后统计其出现次数
    StringBuilder str = new StringBuilder();
    //总共256个字符
    int[] count = new int[256];
    public void Insert(char ch)
    {
        str.append(ch);
        //char自动转变为int型，作为int数组的索引
        count[ch] ++;
    }
  //return the first appearence once char in current stringstream
    public char FirstAppearingOnce()
    {
        for(int i = 0; i < str.length(); i ++) {
            if(count[str.charAt(i)] == 1) return str.charAt(i);
        }
         
        return '#';
    }
}

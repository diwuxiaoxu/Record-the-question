import java.util.*;
public class Solution {
    public int MoreThanHalfNum_Solution(int [] array) {
        //先找到出现次数最多的数字
        //然后判断它出现的次数是否大于数组长度的一半
        //第一种方法，是先排序，然后取中间位置，但是O（NlogN）
        //第二种方法，0（logN）
        //如果存在符合条件的数字，那么它出现的次数一定比它没出现的次数多，即count>0
        if (array == null || array.length == 0) return 0;
        int num = array[0];
        int count = 1;
        for(int i=1; i<array.length; i++){
            if (array[i] == num){
                count++;
            }
            else count--;
            //什么时候更换num值，当count==0 的时候，
            if (count == 0){
                num = array[i];
                count = 1;
            }
        }
        count = 0;
        for (int i = 0; i < array.length; i++){
             if (array[i] == num)
                 count++;
        }
        if (count > array.length/2) return num;
        else return 0;
    }
}

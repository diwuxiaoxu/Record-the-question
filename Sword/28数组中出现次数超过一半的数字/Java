题目描述
数组中有一个数字出现的次数超过数组长度的一半，请找出这个数字。
例如输入一个长度为9的数组{1,2,3,2,2,2,5,4,2}。由于数字2在数组中出现了5次，超过数组长度的一半，因此输出2。如果不存在则输出0。

解析：

import java.util.*;
public class Solution {
    public int MoreThanHalfNum_Solution(int [] array) {
        //先找到出现次数最多的数字
        //然后判断它出现的次数是否大于数组长度的一半
        
        if (array == null || array.length == 0 )return 0;
        //如果存在出现次数超过一半的数字，那么排序后，它一定是处于中间位置
        Arrays.sort(array);
        int middle = array.length /2;
        int num = array[middle];
        //判断中间位置的数是否出现次数超过一半
        int count = 0;
        for(int i=0; i<array.length; i++){
            if (array[i] == num){
                count++;
            }
        }
        if (count > (array.length /2)) return num;
        else return 0;
    }
}

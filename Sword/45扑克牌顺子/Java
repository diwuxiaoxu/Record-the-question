题目描述
LL今天心情特别好,因为他去买了一副扑克牌,发现里面居然有2个大王,2个小王(一副牌原本是54张^_^)..
.他随机从中抽出了5张牌,想测测自己的手气,看看能不能抽到顺子,如果抽到的话,他决定去买体育彩票,嘿嘿！！“红心A,黑桃3,小王,大王,方片5”,“Oh My God!”不是顺子.....LL不高兴了,
他想了想,决定大\小 王可以看成任何数字,并且A看作1,J为11,Q为12,K为13。上面的5张牌就可以变成“1,2,3,4,5”(大小王分别看作2和4),“So Lucky!”。LL决定去买体育彩票啦。 
现在,要求你使用这幅牌模拟上面的过程,然后告诉我们LL的运气如何， 如果牌能组成顺子就输出true，否则就输出false。
为了方便起见,你可以认为大小王是0。


解析：
   题目是让求一个数组是否是顺序数组，中间会存在大小王；
   首先需要对数组进行排序，从小到大；
   然后统计数组中0的个数，即大小王的个数，可以代替任何牌；
   然后从从第一个非0的数开始遍历数组：
         如果存在相等的数字，则说明不可能是顺子；
         如果不相等，即numbers[i]<numbers[i+1]，则需要判断两个数差值有多大，是否可以用大小王填充
                  
                  
import java.util.Arrays;
public class Solution {
    public boolean isContinuous(int [] numbers) {
        //判断手牌number是否可以成为顺子
        if(numbers == null || numbers.length <5) return false;
        //排序手牌
        Arrays.sort(numbers);
        //大小王为0，所以如果手牌中有大小王，则一定是排在前面,统计大小王的个数
        int count = 0;
        for(int i=0; i<numbers.length; i++){
            if(numbers [i] == 0){
                count ++;
            }
        }
        for(int i=count; i<numbers.length-1;i++){
            if (numbers[i] == numbers[i+1]) return false;
            int temp = numbers[i+1] - numbers[i] - 1;
            count = count - temp;
             if (count < 0) return false;
        }
        return true;
    }
}

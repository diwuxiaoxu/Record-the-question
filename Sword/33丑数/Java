题目描述
把只包含质因子2、3和5的数称作丑数（Ugly Number）。例如6、8都是丑数，但14不是，因为它包含质因子7。 习惯上我们把1当做是第一个丑数。求按从小到大的顺序的第N个丑数。

解析：
 下一个丑数，一定是由上一个丑数产生的，
 每次都选择当前最小的丑数，来产生下一个丑数
 
 import java.util.*;
public class Solution {
    public int GetUglyNumber_Solution(int index) {
        //1-6的丑数都是它们自身
        if ( index <= 6) return index;
        //声明一个int型数组，用于存放丑数
        int[] ugly = new int[index];
        ugly[0] =1;
        //质因子2，3,5分别建立索引
        int index_2 = 0, index_3 = 0, index_5 = 0;
        for(int i=1; i<index; i++){
            int ugly_2 = ugly[index_2] *2;
            int ugly_3 = ugly[index_3] *3;
            int ugly_5 = ugly[index_5] *5;
            //选择最小的作为存储的丑数
           int min = Math.min(ugly_2, Math.min(ugly_3,ugly_5));
            ugly[i] = min;
            if (min == ugly_5) index_5++;
            if (min == ugly_3) index_3++;
            if (min == ugly_2) index_2++;
        }
        return ugly[index -1];
        
    }
}

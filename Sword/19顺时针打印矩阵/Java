输入一个矩阵，按照从外向里以顺时针的顺序依次打印出每一个数字，
例如，如果输入如下4 X 4矩阵： 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 则依次打印出数字1,2,3,4,8,12,16,15,14,13,9,5,6,7,11,10.


import java.util.ArrayList;
public class Solution {
    public ArrayList<Integer> printMatrix(int [][] matrix) {
       ArrayList<Integer> res = new ArrayList<>();
        //rowTop:代表第一行，rowBottom代表最后一行
        //colleft:代表最左边一列，colright代表最右边一列
       int rowTop = 0, rowBottom = matrix.length-1;
       int colleft = 0, colright = matrix[0].length-1;
       while(colleft <= colright && rowTop <= rowBottom  ){
           //先加入第一行
           for (int i=colleft; i<=colright; i++){
               res.add(matrix[rowTop][i]);
           }
           //再加入最后一列
           for(int i=rowTop+1; i<=rowBottom; i++){
               res.add(matrix[i][colright]);
           }
           //再加入最后一行,需要判断第一行和最后一行是否相等
           if (rowBottom != rowTop){
               for(int i=colright-1; i>=colleft; i--){
                   res.add(matrix[rowBottom][i]);
               }
           }
           //最后加入第一列，需要判断第一列是否等于最后一列
           if (colleft != colright){
               for(int i=rowBottom-1; i>=rowTop+1; i--){
                   res.add(matrix[i][colleft]);
               }
           }
           rowTop++;
           rowBottom--;
           colleft++;
           colright--;
       }
        return res;
    }
}


输入一棵二叉搜索树，将该二叉搜索树转换成一个排序的双向链表。要求不能创建任何新的结点，只能调整树中结点指针的指向。

解析:
  
  二叉搜索树：左<根<右, 所以如果是需要排序的，则要考虑中序遍历二叉搜索树
  
  双向链表，要求我们需要记录curNode的preNode，然后重新设置left和right指针，使其成为双向链表
  
  /**
public class TreeNode {
    int val = 0;
    TreeNode left = null;
    TreeNode right = null;

    public TreeNode(int val) {
        this.val = val;

    }

}
*/
public class Solution {
 
   
    private TreeNode preNode = null;
    private TreeNode head = null; //双向链表的头结点
    public TreeNode Convert(TreeNode pRootOfTree) {
        if (pRootOfTree == null) return null;
        inOrder(pRootOfTree);
        return head;
    }
    public void inOrder(TreeNode node){
        if (node == null) return;
        inOrder(node.left);
        //中序遍历的节点，用左右指针进行连接
        //确定头结点
        if (head == null ) head = node;
        
        node.left = preNode;
        if (preNode != null){
            preNode.right = node;
        }
        preNode = node;
        
        inOrder(node.right);
    }
}

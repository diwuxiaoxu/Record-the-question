
输入一个复杂链表（每个节点中有节点值，以及两个指针，一个指向下一个节点，另一个特殊指针random指向一个随机节点），请对此链表进行深拷贝，并返回拷贝后的头结点。
（注意，输出结果中请不要返回参数中的节点引用，否则判题程序会直接返回空）

解析：

 这个题目最好是每一步都画出一个链表，对应步骤来，不要搞错链表节点的next节点是什么类型的，注意指针的指向。
/*
public class RandomListNode {
    int label;
    RandomListNode next = null;
    RandomListNode random = null;

    RandomListNode(int label) {
        this.label = label;
    }
}
*/
public class Solution {
    public RandomListNode Clone(RandomListNode pHead)
    {
        if (pHead == null) return null;
        RandomListNode temp = pHead;
        //先复制下一个节点
        while(temp != null){
            RandomListNode curNode = new RandomListNode(temp.label);
            curNode.next = temp.next;
            temp.next = curNode;
            temp = curNode.next;
        }
        //再复制random指针
        temp = pHead;
        while(temp != null){
            RandomListNode temp_clone = temp.next;
            if(temp.random != null){
                temp_clone.random = temp.random.next;
            }
            temp = temp_clone.next;
        }
        //拆分链表
        temp = pHead;
        RandomListNode cloneNode = temp.next;//复制链表的头结点
       
        while(temp.next != null){
            RandomListNode node = temp.next;
            //这一步拆分做的真的是厉害
            temp.next = node.next;
            temp = node;
        }
        return cloneNode;
    }
}

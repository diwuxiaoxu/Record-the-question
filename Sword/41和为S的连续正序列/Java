题目描述
小明很喜欢数学,有一天他在做数学作业时,要求计算出9~16的和,他马上就写出了正确答案是100。
但是他并不满足于此,他在想究竟有多少种连续的正数序列的和为100(至少包括两个数)。
没多久,他就得到另一组连续正数和为100的序列:18,19,20,21,22。现在把问题交给你,你能不能也很快的找出所有和为S的连续正数序列? Good Luck!
输出描述:
输出所有和为S的连续正数序列。序列内按照从小至大的顺序，序列间按照开始数字从小到大的顺序

解析：

  题目的关键是寻找连续的子序列，重点在于连续，所以我们可以考虑使用双指针来代表子序列的start和end
  
  如果start > sum/2 的一半，则停止寻找
  
  import java.util.ArrayList;
public class Solution {
    public ArrayList<ArrayList<Integer> > FindContinuousSequence(int sum) {
       //根据要求就是判断一个连续序列和是否等于sum，使用双指针来作为序列的开始和结束
        ArrayList<ArrayList<Integer>> res = new ArrayList<>();
        if (sum < 1) return res;
        int start = 1;
        int end = 2;
        while(start <= sum /2){
            int curSum = 0;
            for (int i=start; i<=end; i++){
                curSum += i;
            }
            //如果curSum < sum, 则需要增加序列中的数，移动end指针
            if (curSum < sum){
                end ++;
            }
            //如果curSum > sum, 则需要减少序列中的数，移动start指针
            else if (curSum > sum){
                start++;
            }
            //如果相等，则将序列[first,last]加入到res中
            else{
                ArrayList<Integer> temp = new ArrayList<>();
                for(int i=start; i<= end; i++){
                    temp.add(i);
                }
                res.add(temp);
                //继续往后找连续序列
                start++;
            }
        }
        return res;
    }
}

题目描述
汇编语言中有一种移位指令叫做循环左移（ROL），现在有个简单的任务，就是用字符串模拟这个指令的运算结果。对于一个给定的字符序列S，请你把其循环左移K位后的序列输出。
例如，字符序列S=”abcXYZdef”,要求输出循环左移3位后的结果，即“XYZdefabc”。是不是很简单？OK，搞定它！

解析：

思路相对比较复杂，需要自己手写几遍
  首先，我们将[0,n-1]进行反转，可以得到cbaXYZdef;
  然后，我们将[n,str.length()-1]进行反转，可以得到cbafedZYX;
  最后，我们将[0,str.length()-1]进行反转，可以得到XYZdefabc.
  
  public class Solution {
    public String LeftRotateString(String str,int n) {
        if (str == null || str.length() == 0) return "";
        char[] chars = str.toCharArray();
        reverse(chars, 0, n-1);
        reverse(chars,n,str.length()-1);
        reverse(chars,0,str.length()-1);
        return new String(chars);
    }
    public void reverse(char[] chars, int left, int right){
        while(left <= right){
            char ch = chars[left];
            chars[left] = chars[right];
            chars[right] = ch;
            left++;
            right--;
        }
    }
}
